apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cilium-application
  namespace: argocd
spec:
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: cilium
    repoURL: https://helm.cilium.io/
    targetRevision: 1.18.0
    helm:
      valuesObject:
        ipam:
          mode: kubernetes
        prometheus:
          enabled: true
        operator:
          prometheus:
            enabled: true
          hubble:
            enabled: true
            metrics:
              enableOpenMetrics: true
              enabled:
                - dns:query
                - drop
                - tcp
                - flow
                - port-distribution
                - icmp
                - http
              #enabled: {dns,drop,tcp,flow,port-distribution,icmp,httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction}
        kubeProxyReplacement: true
        securityContext:
          capabilities:
            ciliumAgent:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            cleanCiliumState:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
        cgroup:
          autoMount:
            enabled: false
          hostRoot: /sys/fs/cgroup
        k8sServiceHost: localhost #Remove for most kubernetes clusters
        k8sServicePort: 7445 #Remove for most kubernetes clusters
        l2announcements:
          enabled: true
        gatewayAPI:
          enabled: true
          externalTrafficPolicy: Local
          secretsNamespace:
            create: false
            name: certificate
        # encryption:
        #   enabled: true
        #   type: wireguard
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true