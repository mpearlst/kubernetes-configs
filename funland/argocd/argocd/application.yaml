apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: argocd-sso
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: argocd
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: client_id
      remoteRef:
        key: argocd-sso
        property: argocd_client_id
    - secretKey: client_secret
      remoteRef:
        key: argocd-sso
        property: argocd_client_secret
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd-application
  namespace: argocd
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: argo-cd
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 8.0.15
    helm:
      valuesObject:
        global:
          domain: argocd.batlab.io
        configs:
          params:
            server.insecure: true
          cm:
            resource.compareoptions: |
              ignoreAggregatedRoles: true
              ignoreResourceStatusField: crd
            url: "https://argocd.batlab.io"
            dex.config: |
              connectors:
                - type: oidc
                  name: authentik
                  id: authentik
                  config:
                    issuer: https://auth.batlab.io/application/o/argocd/
                    clientID: $argocd-sso:client_id
                    clientSecret: $argocd-sso:client_secret
                    insecureEnableGroups: true
                    scopes:
                      - openid
                      - profile
                      - email
          rbac:
            policy.csv: |
              g, ArgoCD Admin, role:admin
        repoServer:
          rbac:
            - apiGroups: [""]
              resources: ["secrets"]
              verbs: ["get", "watch", "list"]
        deploymentAnnotations:
          reloader.stakater.com/auto: "true"
        # To enable High Availability (HA) for the Argo CD server:
        # 1. Uncomment and adjust the replicaCount.
        # 2. Configure the connection to an external HA Redis cluster under the 'database' section.
        # 3. Ensure 'redis.enabled' is set to 'false'.
        # server:
          # replicaCount: 3
          # database:
          #   host: argocd-redis-ha.argocd-redis-ha.svc
          #   port: 6379
          #   # passwordSecretName: argocd-redis-secret
        # For a non-HA setup, ensure redis.enabled is true (default) or explicitly set it.
        redis:
          enabled: true
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true