---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: synapse-config
  namespace: synapse
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      data:
        homeserver.yaml: |-
          server_name: "batlab.io"
          public_baseurl: "https://matrix.batlab.io"
          pid_file: /data/homeserver.pid
          serve_server_wellknown: true
          listeners:
            - port: 8008
              tls: false
              type: http
              x_forwarded: true
              resources:
                - names: [client, federation]
                  compress: false
          database:
            name: psycopg2
            args:
              database: synapse
              host: synapse-dbc-rw.postgres
              user: {{ .synapse_db_user | toString }}
              password: {{ .synapse_db_pass | toString }}
              port: 5432
              cp_min: 5
              cp_max: 10

          enable_registration: false
          enable_registration_without_verification: false

          log_config: "/data/batlab.io.log.config"
          media_store_path: /data/media_store
          registration_shared_secret: {{ .synapse_registration_secret | toString }}
          report_stats: false
          macaroon_secret_key: {{ .synapse_macaroon_secret | toString }}
          form_secret: {{ .synapse_form_secret | toString }}
          signing_key_path: "/data/batlab.io.signing.key"
          trusted_key_servers:
            - server_name: "matrix.org"

          presence:
            enabled: false

          # SSO Configuration with Authentik
          oidc_providers:
            - idp_id: authentik
              idp_name: "Authentik"
              discover: true
              issuer: "https://auth.batlab.io/application/o/synapse/"
              client_id: {{ .oidc_client_id | toString }}
              client_secret: {{ .oidc_client_secret | toString }}
              scopes: ["openid", "profile", "email"]
              allow_existing_users: true
              user_mapping_provider:
                config:
                  localpart_template: "{{ user.preferred_username }}"
                  display_name_template: "{{ user.name }}"
                  email_template: "{{ user.email }}"
  data:
    - secretKey: synapse_db_pass
      remoteRef:
        key: synapse-db-credentials
        property: password
    - secretKey: synapse_db_user
      remoteRef:
        key: synapse-db-credentials
        property: username
    - secretKey: synapse_registration_secret
      remoteRef:
        key: synapse
        property: synapse-registration-secret
    - secretKey: synapse_macaroon_secret
      remoteRef:
        key: synapse
        property: synapse-macaroon-secret
    - secretKey: synapse_form_secret
      remoteRef:
        key: synapse
        property: synapse-form-secret
    - secretKey: oidc_client_id
      remoteRef:
        key: synapse-oidc
        property: client_id
    - secretKey: oidc_client_secret
      remoteRef:
        key: synapse-oidc
        property: client_secret