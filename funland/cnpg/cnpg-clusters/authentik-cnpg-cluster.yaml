apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: authentik-dbc
  namespace: postgres
spec:
  instances: 3
  storage:
    size: 1Gi
    storageClass: longhorn-single
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              cnpg.io/cluster: authentik-dbc
          topologyKey: kubernetes.io/hostname
  bootstrap:
    initdb:
      database: authentik
      owner: authentik
      postInitSQL:
        - "REVOKE ALL ON SCHEMA public FROM PUBLIC;"
        - "ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE ALL ON TABLES FROM PUBLIC;"
        - "ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE ALL ON SEQUENCES FROM PUBLIC;"
        - "ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE ALL ON FUNCTIONS FROM PUBLIC;"
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: authentik-db-credentials
  namespace: postgres
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRefs:
    - name: 1password
      kind: ClusterSecretStore
  selector:
    secret:
      name: authentik-dbc-app
  template:
    data:
      _metadata_origin: "push"
      username: "{{ .username | toString }}"
      password: "{{ .password | toString }}"
  data:
    - match:
        secretKey: username
        remoteRef:
          remoteKey: authentik-db-credentials
          property: username
    - match:
        secretKey: password
        remoteRef:
          remoteKey: authentik-db-credentials
          property: password