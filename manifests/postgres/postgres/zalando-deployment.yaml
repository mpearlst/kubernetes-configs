---
kind: Namespace
apiVersion: v1
metadata:
  name: postgres
---
apiVersion: acid.zalan.do/v1
kind: postgresql
metadata:
  name: cluster01
  namespace: postgres
spec:
  teamId: acid
  volume:
    size: 30Gi
    storageClass: longhorn
  numberOfInstances: 1
  enableLogicalBackup: true  
  preparedDatabases:
    synapse:
      defaultUsers: true
      extensions: {}
      schemas:
        public:
          defaultRoles: false
          defaultUsers: false
    # vikunja:
    #   defaultUsers: true
    #   extensions: {}
    #   schemas:
    #     public:
    #       defaultRoles: false
    #       defaultUsers: false
    # authentik:
    #   defaultUsers: true
    #   extensions: {}
    #   schemas:
    #     public:
    #       defaultRoles: false
    #       defaultUsers: false
    # vaultwarden:
    #   defaultUsers: true
    #   extensions: {}
    #   schemas:
    #     public:
    #       defaultRoles: false
    #       defaultUsers: false
  postgresql:
    version: "17"
    parameters:
      password_encryption: scram-sha-256
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: cluster01.synapse.owner
  namespace: postgres
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRefs:
    - name: 1password
      kind: ClusterSecretStore
  selector:
    secret:
      name: synapse-owner-user.cluster01.credentials.postgresql.acid.zalan.do
  template:
    data:
      _metadata_origin: "push"
      # test123: "{{ .username | toString }}"
      username: "{{ .username | toString }}"
      password: "{{ .password | toString }}"
  data:
    - match:
        secretKey: username
        remoteRef:
          remoteKey: postgres.cluster01.synapse.owner
          property: username
    - match:
        secretKey: password
        remoteRef:
          remoteKey: postgres.cluster01.synapse.owner
          property: password
---
# apiVersion: external-secrets.io/v1alpha1
# kind: PushSecret
# metadata:
#   name: cluster01.vikunja.owner
#   namespace: postgres
#   annotations:
#     argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
# spec:
#   refreshInterval: "5m"
#   secretStoreRefs:
#     - name: 1password
#       kind: ClusterSecretStore
#   selector:
#     secret:
#       name: vikunja-owner-user.cluster01.credentials.postgresql.acid.zalan.do
#   template:
#     data:
#       _metadata_origin: "push"
#       # test123: "{{ .username | toString }}"
#       username: "{{ .username | toString }}"
#       password: "{{ .password | toString }}"
#   data:
#     - match:
#         secretKey: username
#         remoteRef:
#           remoteKey: postgres.cluster01.vikunja.owner
#           property: username
#     - match:
#         secretKey: password
#         remoteRef:
#           remoteKey: postgres.cluster01.vikunja.owner
#           property: password
# ---
# apiVersion: external-secrets.io/v1alpha1
# kind: PushSecret
# metadata:
#   name: cluster01.authentik.owner
#   namespace: postgres
#   annotations:
#     argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
# spec:
#   refreshInterval: "5m"
#   secretStoreRefs:
#     - name: 1password
#       kind: ClusterSecretStore
#   selector:
#     secret:
#       name: authentik-owner-user.cluster01.credentials.postgresql.acid.zalan.do
#   template:
#     data:
#       _metadata_origin: "push"
#       # test123: "{{ .username | toString }}"
#       username: "{{ .username | toString }}"
#       password: "{{ .password | toString }}"
#   data:
#     - match:
#         secretKey: username
#         remoteRef:
#           remoteKey: postgres.cluster01.authentik.owner
#           property: username
#     - match:
#         secretKey: password
#         remoteRef:
#           remoteKey: postgres.cluster01.authentik.owner
#           property: password
# ---
# apiVersion: external-secrets.io/v1alpha1
# kind: PushSecret
# metadata:
#   name: cluster01.vaultwarden.owner
#   namespace: postgres
#   annotations:
#     argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
# spec:
#   refreshInterval: "5m"
#   secretStoreRefs:
#     - name: 1password
#       kind: ClusterSecretStore
#   selector:
#     secret:
#       name: vaultwarden-owner-user.cluster01.credentials.postgresql.acid.zalan.do
#   template:
#     data:
#       _metadata_origin: "push"
#       username: "{{ .username | toString }}"
#       password: "{{ .password | toString }}"
#   data:
#     - match:
#         secretKey: username
#         remoteRef:
#           remoteKey: postgres.cluster01.vaultwarden.owner
#           property: username
#     - match:
#         secretKey: password
#         remoteRef:
#           remoteKey: postgres.cluster01.vaultwarden.owner
#           property: password